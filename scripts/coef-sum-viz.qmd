---
title: "coef-sum-viz"
author: "Henry Li"
format: html
editor: visual
---

## Visualization

```{r}
library(dplyr)
library(tidyr)
library(ggplot2)
library(here)
```

```{r}
# Define the folder path containing the CSV files
folder_path <- here("output")

# Get a list of all CSV files in the folder
csv_files <- list.files(path = folder_path, pattern = "*.csv", full.names = TRUE)

# Read and combine all CSV files, ensuring Team_ID is always a character
combined_data <- csv_files %>%
  lapply(function(file) {
    df <- read.csv(file)
    df$Team_ID <- as.character(df$Team_ID)  # Ensure Team_ID is a character
    return(df)
  }) %>%
  bind_rows(.id = "file_id") %>%
  filter(!is.na(Team_ID)) %>% 
  mutate(Significant_Coef = ifelse(Significant_at_0.001, Estimate, NA))
```

```{r}
# Count how many times each coefficient is significant and not significant across rounds
significance_summary <- combined_data %>%
  group_by(Covariate, Team_ID, Vero_type) %>%
  summarize(
    Significant_Count = sum(Significant_at_0.001),
    Not_Significant_Count = n() - Significant_Count,
    Mean_Estimate_If_Significant = mean(Estimate[Significant_at_0.001 == TRUE], na.rm = TRUE),
    Mean_Estimate_of_ALL = mean(Estimate, na.rm = TRUE)
  ) %>%
  ungroup()
```

```{r}
ggplot(combined_data, aes(x = Covariate, y = Significant_Coef)) +
  geom_boxplot() +
  labs(
    title = "Distribution of Significant Estimates for Each Covariate",
    x = "Covariate",
    y = "Estimate (If Significant)"
  ) +
  theme_minimal()
```

```{r}
# Calculate the count of non-NA values for each covariate
covariate_counts <- combined_data %>%
  group_by(Covariate) %>%
  summarize(count = sum(!is.na(Significant_Coef)))

# Merge counts with the original data
combined_data <- combined_data %>%
  left_join(covariate_counts, by = "Covariate") %>%
  mutate(Covariate_with_count = paste0(Covariate, " (n=", count, ")"))

```

```{r}
library(ggplot2)

ggplot(combined_data, aes(x = Covariate_with_count, y = Significant_Coef, fill = Covariate_with_count)) +
  geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
  scale_fill_brewer(palette = "Set3") +  # Use a color palette that is visually appealing
  labs(
    title = "Distribution of Significant Estimates for Each Covariate",
    x = "Sequential Strucutral Signatures",
    y = "Estimate (If Significant)"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
    axis.title.x = element_text(margin = margin(t = 10)),
    axis.title.y = element_text(margin = margin(r = 10)),
    legend.position = "none"  # Remove legend since the color is redundant with the x-axis
  )
```

```{r}
# Identify teams that do not have all 1, 2, and 3 in the Round_Number column
teams_missing_rounds <- combined_data %>%
  group_by(Team_ID) %>%
  summarize(all_rounds_present = all(c(1, 2, 3) %in% Round_Number)) %>%
  filter(!all_rounds_present)

# View the result
print(teams_missing_rounds)

teams_inspect <- combined_data %>%
  filter(Team_ID == "2_7_8" | Team_ID == "4_3_7")

```

```{r}
ggplot(significance_summary, aes(x = Covariate, y = Mean_Estimate_of_ALL)) +
  geom_boxplot() +
  labs(
    title = "Distribution of Mean Estimate of Each Team for Each Covariate",
    x = "Covariate",
    y = "Mean Estimate (of All)"
  ) +
  theme_minimal()
```

```{r, eval=FALSE}
outliers <- significance_summary %>%
  group_by(Team_ID) %>%
  mutate(
    Q1 = quantile(`PSAB-AY`, 0.25),
    Q3 = quantile(`PSAB-AY`, 0.75),
    IQR = Q3 - Q1,
    lower_bound = Q1 - 1.5 * IQR,
    upper_bound = Q3 + 1.5 * IQR,
    is_outlier = `PSAB-AY` < lower_bound | `PSAB-AY` > upper_bound
  ) %>%
  filter(is_outlier)
```

## violin plot

```{r}
ggplot(significance_summary, aes(x = Covariate, y = Mean_Estimate_If_Significant)) +
  geom_violin(trim = FALSE) +
  geom_jitter(width = 0.2, height = 0, alpha = 0.5, color = "blue") +
  labs(
    title = "Distribution of Mean Estimate (If Significant) for Each Covariate",
    x = "Covariate",
    y = "Mean Estimate (If Significant)"
  ) +
  theme_minimal()
```

## violin-box plot

```{r}
ggplot(significance_summary, aes(x = Covariate, y = Mean_Estimate_If_Significant)) +
  geom_violin(trim = FALSE, fill = "lightgray") +
  geom_boxplot(width = 0.1, color = "red", alpha = 0.7) +
  labs(
    title = "Distribution of Mean Estimate (If Significant) for Each Covariate",
    x = "Covariate",
    y = "Mean Estimate (If Significant)"
  ) +
  theme_minimal()

```

## mean visualization - density plot

```{r}
# ggplot(significance_summary, aes(x = Mean_Estimate_If_Significant, fill = Covariate)) +
#   geom_density(alpha = 0.5) +
#   labs(
#     title = "Density Plot of Mean Estimate (If Significant) for Each Covariate",
#     x = "Mean Estimate (If Significant)",
#     y = "Density"
#   ) +
#   theme_minimal()
```

## Summarize across teams to get overall significance counts per coefficient

```{r}
overall_significance <- significance_summary %>%
  group_by(Covariate) %>%
  summarize(
    Total_Significant = sum(Significant_Count),
    Total_Not_Significant = sum(Not_Significant_Count), 
    Percent_Significant = Total_Significant / (Total_Significant + Total_Not_Significant) * 100,
    Mean_Estimate_If_Significant = mean(Mean_Estimate_If_Significant, na.rm = TRUE)
  )
```

## Sig of Coef across rounds

```{r}
ggplot(overall_significance, aes(x = Covariate, y = Percent_Significant, fill = Covariate)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8), fill = "cadetblue", width = 0.7, alpha = 0.8) +
  geom_text(aes(label = round(Percent_Significant, 2)), 
            position = position_dodge(width = 0.8), vjust = 1.5, color = "white", size = 3.5) +
  labs(
    title = "Proportion of Rounds with Significant Sequential Structural Signatures",
    x = "Sequential Structural Signatures (n=138)",
    y = "Percentage of Significant Cases (%)",
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    legend.position = "none",  # Remove the legend to reduce clutter since fill color is the same as x-axis
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.text.y = element_text(size = 12),
    axis.title.x = element_text(margin = margin(t = 10)),
    axis.title.y = element_text(margin = margin(r = 10))
  )

```

## Mean estimate viz

```{r}
ggplot(overall_significance, aes(x = Covariate)) +
  geom_bar(aes(y = Mean_Estimate_If_Significant), stat = "identity", fill = "blue", alpha = 0.7) +
  labs(
    title = "Mean of Covariates Overall (if Significant)",
    x = "Coefficient",
    y = "Estimate (in log odds ratio)", 
    fill = "Significance"
  ) +
  theme_minimal()
```

## Across Verotypes and Coefficients

```{r}
overall_significance_by_type <- significance_summary %>%
  group_by(Covariate, Vero_type) %>%
  summarize(
    Total_Significant = sum(Significant_Count),
    Total_Not_Significant = sum(Not_Significant_Count), 
    Percent_Significant = Total_Significant / (Total_Significant + Total_Not_Significant)*100,
    Mean_Estimate_If_Significant = mean(Mean_Estimate_If_Significant, na.rm = TRUE)
  )
```

## Visualization

```{r}
ggplot(overall_significance_by_type, aes(x = Covariate, y = Percent_Significant, fill = Vero_type)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(label = round(Percent_Significant, 3)*100), 
            position = position_dodge(width = 0.9), vjust = -0.5) +
  labs(
    title = "Significance Percentage of Covariates by Vero_type",
    x = "Covariate",
    y = "Percent_Significant",
    fill = "Vero_type"
  ) +
  theme_minimal()
```

```{r}
ggplot(overall_significance_by_type, aes(x = Covariate, y = Mean_Estimate_If_Significant, fill = Vero_type)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(label = round(Mean_Estimate_If_Significant,1)), 
            position = position_dodge(width = 0.9), vjust = -0.5) +
  labs(
    title = "Mean of Covariates by Vero_type",
    x = "Covariate",
    y = "Estimate",
    fill = "Vero_type"
  ) +
  theme_minimal()
```

```{r}
overall_significance_by_type <- overall_significance_by_type %>%
  mutate(n = Total_Significant + Total_Not_Significant) %>%
  mutate(Vero_type_label = paste0(Vero_type, " (n=", n, ")"))
```

```{r}
ggplot(overall_significance_by_type, aes(x = Covariate, y = Percent_Significant, fill = Vero_type_label)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
  geom_text(aes(label = round(Percent_Significant, 1)), 
            position = position_dodge(width = 0.8), vjust = 1.5, color = "white", size = 3) +
  labs(
    title = "Proportion of Rounds with Significant Sequential Structural Signatures",
    x = "Sequential Structural Signatures",
    y = "Percentage of Significant Cases (%)",
    fill = "Vero Type"
  ) +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),
    legend.position = "top",
    legend.title = element_text(face = "bold"),
    legend.text = element_text(size = 12),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```

## Save the plot to a file

```{r}
# ggsave
```
